<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2003 - 2024 The eFaps Team (-)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->




<install xmlns="http://www.efaps.org/xsd"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.efaps.org/xsd http://www.efaps.org/xsd/eFaps_1.0.xsd">
    <application>eFaps-Kernel</application>
    <version number="1" reloadCache="false" login="false">
        <description>Create base SQL tables and views.</description>
        <lifecyle>
            <ignore step="EFAPS_CREATE" />
            <ignore step="EFAPS_UPDATE" />
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
        <script type="rhino" name="CreateAll.js" function="eFapsCreateAll()" />
    </version>
    <version number="2" reloadCache="true">
        <description>Install SQL Tables.</description>
        <lifecyle>
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
    </version>
    <version number="3" reloadCache="true">
        <description>Install complete Data Model</description>
        <lifecyle>
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
    </version>
    <version number="4" reloadCache="true">
        <description>Install Access Types, Access Sets and Users. Install all Stores. Update types containing stores. </description>
        <lifecyle>
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
    </version>
    <version number="5" reloadCache="true" login="false">
        <description>Update Password of Administrator and Activate Administrator and Administration Role.</description>
        <lifecyle>
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
        <script type="groovy">
            import org.efaps.admin.datamodel.Type;
            import org.efaps.db.Context;
            import org.efaps.db.Update;
            import org.efaps.db.Insert;
            import org.efaps.db.QueryBuilder;
            import org.efaps.db.InstanceQuery;

            EFAPS_LOGGER.info("    Update '" + EFAPS_USERNAME + "' Password");
            Context.getThreadContext().getPerson().setPassword(EFAPS_PASSWORD);

            EFAPS_LOGGER.info("    Activate Person '" + EFAPS_USERNAME + "'");
            Update update1 = new Update(Type.get("Admin_User_Abstract"), "1");
            update1.add("Status","true");
            update1.executeWithoutAccessCheck();

            EFAPS_LOGGER.info("    Setting default TimeZone, Chronology and Locale for  Person '" + EFAPS_USERNAME + "'");
            Update update2 = new Update(Type.get("Admin_User_Person"), "1");
            update2.add("TimeZone","UTC");
            update2.add("Language","1");
            update2.add("Chronology","ISO8601");
            update2.add("Locale","en_US");
            update2.executeWithoutAccessCheck();

            EFAPS_LOGGER.info("    Activate Role 'Administration'");
            Update update3 = new Update(Type.get("Admin_User_Abstract"), "2");
            update3.add("Status","true");
            update3.executeWithoutAccessCheck();

            EFAPS_LOGGER.info("    Create General-Instance for 'Administrator'");
            Insert insert = new Insert(Type.get("GeneralInstance"));
            insert.add("InstanceTypeID", Type.get("Admin_User_Person").getId());
            insert.add("InstanceID", 1);
            insert.add("ExchangeSystemID", 0);
            insert.add("ExchangeID", 0);
            insert.executeWithoutAccessCheck();


            EFAPS_LOGGER.info("    Create JAASKEY for User Administrator");
            //Admin_User_JAASSystem
            final QueryBuilder queryBldr3 = new QueryBuilder(UUID.fromString("28e45c59-946d-4502-94b9-58a1bf23ab88"));
            queryBldr3.addWhereAttrEqValue("UUID", "878a1347-a5f3-4a68-a9a4-d214e3570a62");
            final InstanceQuery query3 = queryBldr3.getQuery();
            query3.executeWithoutAccessCheck();
            if (query3.next()) {
                //Admin_User_JAASKey
                insert = new Insert(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
                insert.add("Key", "Administrator");
                insert.add("UserLink", 1);
                insert.add("JAASSystemLink", query3.getCurrentValue());
                insert.executeWithoutTrigger();
            }
        </script>
    </version>
    <version number="6" compile="true" reloadCache="true">
        <description>Import Esjps</description>
    </version>
    <version number="7" compile="true" reloadCache="true">
        <description>Import Data</description>
        <script type="groovy"><![CDATA[
            import java.io.File;
            import java.util.UUID;
            import org.efaps.admin.user.JAASSystem;
            import org.efaps.admin.user.Role;
            import org.efaps.admin.user.Person;
            import org.efaps.db.Context;
            import org.efaps.db.QueryBuilder;
            import org.efaps.db.InstanceQuery;
            import org.efaps.db.Insert;


            EFAPS_LOGGER.info("    Check if Languages must be imported");
            //Admin_Language
            QueryBuilder queryBldr = new QueryBuilder(UUID.fromString("56851b99-c5fe-41f5-9e95-d7d94137acc1"));
            queryBldr.addWhereAttrEqValue("Language", "en");
            InstanceQuery query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                Insert insert = new Insert(UUID.fromString("56851b99-c5fe-41f5-9e95-d7d94137acc1"));
                insert.add("Language", "en");
                insert.executeWithoutTrigger();
            }

            EFAPS_LOGGER.info("    Check if Run Level bpm must be imported");
            // import run level for the web application (if not already exists...)
            // Admin_RunLevel_RunLevel
            queryBldr = new QueryBuilder(UUID.fromString("a35ffe76-d9ef-44de-975c-56384a3cf694"));
            queryBldr.addWhereAttrEqValue("UUID", "04403ff6-8ff4-4c52-9910-0619ed189f25");
            query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                 QueryBuilder queryBldr2 = new QueryBuilder(UUID.fromString("a35ffe76-d9ef-44de-975c-56384a3cf694"));
                queryBldr2.addWhereAttrEqValue("UUID", "edfb9537-9d91-4fa0-acb1-cf3f2678a245");
                InstanceQuery query2 = queryBldr2.getQuery();
                query2.executeWithoutAccessCheck();
                if (query2.next()) {
                    Insert insert = new Insert(UUID.fromString("a35ffe76-d9ef-44de-975c-56384a3cf694"));
                    insert.add("RunLevel", "bpm");
                    insert.add("UUID", "04403ff6-8ff4-4c52-9910-0619ed189f25");
                    insert.add("Parent", query2.getCurrentValue());
                    insert.executeWithoutTrigger();
                    //Admin_RunLevel_Definition
                    Insert insert2 = new Insert(UUID.fromString("f9958e29-79ab-40f8-a947-0e22ce6c3fa3"));
                    insert2.add("RunLevelID", insert.getInstance());
                    insert2.add("Priority", 1);
                    insert2.add("Class", "org.efaps.bpm.BPM");
                    insert2.add("Method", "initialize");
                    insert2.executeWithoutTrigger();
                }

            }

            EFAPS_LOGGER.info("    Check if Run Level webapp must be imported");
            // import run level for the web application (if not already exists...)
            // Admin_RunLevel_RunLevel
            queryBldr = new QueryBuilder(UUID.fromString("a35ffe76-d9ef-44de-975c-56384a3cf694"));
            queryBldr.addWhereAttrEqValue("UUID", "590ba27b-26eb-4bdf-ac30-1e1704c5f557");
            query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                //Admin_RunLevel
                QueryBuilder queryBldr2 = new QueryBuilder(UUID.fromString("a35ffe76-d9ef-44de-975c-56384a3cf694"));
                queryBldr2.addWhereAttrEqValue("UUID", "04403ff6-8ff4-4c52-9910-0619ed189f25");
                InstanceQuery query2 = queryBldr2.getQuery();
                query2.executeWithoutAccessCheck();
                if (query2.next()) {
                    Insert insert = new Insert(UUID.fromString("a35ffe76-d9ef-44de-975c-56384a3cf694"));
                    insert.add("RunLevel", "webapp");
                    insert.add("UUID", "590ba27b-26eb-4bdf-ac30-1e1704c5f557");
                    insert.add("Parent", query2.getCurrentValue());
                    insert.executeWithoutTrigger();
                    //Admin_RunLevel_Definition
                    Insert insert2 = new Insert(UUID.fromString("f9958e29-79ab-40f8-a947-0e22ce6c3fa3"));
                    insert2.add("RunLevelID", insert.getInstance());
                    insert2.add("Priority", 1);
                    insert2.add("Class", "org.efaps.admin.access.AccessType");
                    insert2.add("Method", "initialize");
                    insert2.executeWithoutTrigger();

                    insert2 = new Insert(UUID.fromString("f9958e29-79ab-40f8-a947-0e22ce6c3fa3"));
                    insert2.add("RunLevelID", insert.getInstance());
                    insert2.add("Priority", 2);
                    insert2.add("Class", "org.efaps.admin.access.AccessSet");
                    insert2.add("Method", "initialize");
                    insert2.executeWithoutTrigger();

                    insert2 = new Insert(UUID.fromString("f9958e29-79ab-40f8-a947-0e22ce6c3fa3"));
                    insert2.add("RunLevelID", insert.getInstance());
                    insert2.add("Priority", 3);
                    insert2.add("Class", "org.efaps.admin.ui.AbstractUserInterfaceObject");
                    insert2.add("Method", "initialize");
                    insert2.executeWithoutTrigger();

                    insert2 = new Insert(UUID.fromString("f9958e29-79ab-40f8-a947-0e22ce6c3fa3"));
                    insert2.add("RunLevelID", insert.getInstance());
                    insert2.add("Priority", 4);
                    insert2.add("Class", "org.efaps.admin.event.EventDefinition");
                    insert2.add("Method", "initialize");
                    insert2.executeWithoutTrigger();

                    insert2 = new Insert(UUID.fromString("f9958e29-79ab-40f8-a947-0e22ce6c3fa3"));
                    insert2.add("RunLevelID", insert.getInstance());
                    insert2.add("Priority", 5);
                    insert2.add("Class", "org.efaps.admin.common.NumberGenerator");
                    insert2.add("Method", "initialize");
                    insert2.executeWithoutTrigger();

                    insert2 = new Insert(UUID.fromString("f9958e29-79ab-40f8-a947-0e22ce6c3fa3"));
                    insert2.add("RunLevelID", insert.getInstance());
                    insert2.add("Priority", 6);
                    insert2.add("Class", "org.efaps.admin.common.Quartz");
                    insert2.add("Method", "initialize");
                    insert2.executeWithoutTrigger();

                    insert2 = new Insert(UUID.fromString("f9958e29-79ab-40f8-a947-0e22ce6c3fa3"));
                    insert2.add("RunLevelID", insert.getInstance());
                    insert2.add("Priority", 7);
                    insert2.add("Class", "org.efaps.admin.common.MsgPhrase");
                    insert2.add("Method", "initialize");
                    insert2.executeWithoutTrigger();
                }
            }

            EFAPS_LOGGER.info("    Check if JAASKEY for Role ADMIN_REST must be imported");
            // Admin_User_JAASKey
            queryBldr = new QueryBuilder(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
            queryBldr.addWhereAttrEqValue("Key", "Admin_REST");
            query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                //Admin_User_RoleGlobal
                final QueryBuilder queryBldr2 = new QueryBuilder(UUID.fromString("e4d6ecbe-f198-4f84-aa69-5a9fd3165112"));
                queryBldr2.addWhereAttrEqValue("UUID", "2d142645-140d-46ad-af67-835161a8d732");
                final InstanceQuery query2 = queryBldr2.getQuery();
                query2.executeWithoutAccessCheck();
                //Admin_User_JAASSystem
                final QueryBuilder queryBldr3 = new QueryBuilder(UUID.fromString("28e45c59-946d-4502-94b9-58a1bf23ab88"));
                queryBldr3.addWhereAttrEqValue("UUID", "878a1347-a5f3-4a68-a9a4-d214e3570a62");
                final InstanceQuery query3 = queryBldr3.getQuery();
                query3.executeWithoutAccessCheck();

                if (query2.next() && query3.next()) {
                    //Admin_User_JAASKey
                    final Insert insert = new Insert(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
                    insert.add("Key", "Admin_REST");
                    insert.add("UserLink", query2.getCurrentValue());
                    insert.add("JAASSystemLink", query3.getCurrentValue());
                    insert.executeWithoutTrigger();
                }
            }
            EFAPS_LOGGER.info("    Check if JAASKEY for Role HistoryReader must be imported");
            // Admin_User_JAASKey
            queryBldr = new QueryBuilder(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
            queryBldr.addWhereAttrEqValue("Key", "History_Reader");
            query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                  //Admin_User_RoleGlobal
                final QueryBuilder queryBldr2 = new QueryBuilder(UUID.fromString("e4d6ecbe-f198-4f84-aa69-5a9fd3165112"));
                queryBldr2.addWhereAttrEqValue("UUID", "25643ce4-1be9-4d3b-b83f-f5ac8f1803c7");
                final InstanceQuery query2 = queryBldr2.getQuery();
                query2.executeWithoutAccessCheck();
                //Admin_User_JAASSystem
                final QueryBuilder queryBldr3 = new QueryBuilder(UUID.fromString("28e45c59-946d-4502-94b9-58a1bf23ab88"));
                queryBldr3.addWhereAttrEqValue("UUID", "878a1347-a5f3-4a68-a9a4-d214e3570a62");
                final InstanceQuery query3 = queryBldr3.getQuery();
                query3.executeWithoutAccessCheck();


                if (query2.next() && query3.next()) {
                    //Admin_User_JAASKey
                    final Insert insert = new Insert(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
                    insert.add("Key", "History_Reader");
                    insert.add("UserLink", query2.getCurrentValue());
                    insert.add("JAASSystemLink", query3.getCurrentValue());
                    insert.executeWithoutTrigger();
                }

                //Admin_User_RoleGlobal
                queryBldr2 = new QueryBuilder(UUID.fromString("e4d6ecbe-f198-4f84-aa69-5a9fd3165112"));
                queryBldr2.addWhereAttrEqValue("UUID", "883e6c48-d814-4b7f-bf31-5083d88db7ec");
                query2 = queryBldr2.getQuery();
                query2.executeWithoutAccessCheck();
                //Admin_User_JAASSystem
                queryBldr3 = new QueryBuilder(UUID.fromString("28e45c59-946d-4502-94b9-58a1bf23ab88"));
                queryBldr3.addWhereAttrEqValue("UUID", "878a1347-a5f3-4a68-a9a4-d214e3570a62");
                query3 = queryBldr3.getQuery();
                query3.executeWithoutAccessCheck();

                if (query2.next() && query3.next()) {
                    //Admin_User_JAASKey
                    final Insert insert = new Insert(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
                    insert.add("Key", "History_Modifier");
                    insert.add("UserLink", query2.getCurrentValue());
                    insert.add("JAASSystemLink", query3.getCurrentValue());
                    insert.executeWithoutTrigger();
                }
            }

            EFAPS_LOGGER.info("    Check if JAASKEY for Role Administration must be imported");
            // Admin_User_JAASKey
            queryBldr = new QueryBuilder(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
            queryBldr.addWhereAttrEqValue("Key", "Administration");
            query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                //Admin_User_RoleGlobal
                final QueryBuilder queryBldr2 = new QueryBuilder(UUID.fromString("e4d6ecbe-f198-4f84-aa69-5a9fd3165112"));
                queryBldr2.addWhereAttrEqValue("UUID", "1d89358d-165a-4689-8c78-fc625d37aacd");
                final InstanceQuery query2 = queryBldr2.getQuery();
                query2.executeWithoutAccessCheck();
                //Admin_User_JAASSystem
                final QueryBuilder queryBldr3 = new QueryBuilder(UUID.fromString("28e45c59-946d-4502-94b9-58a1bf23ab88"));
                queryBldr3.addWhereAttrEqValue("UUID", "878a1347-a5f3-4a68-a9a4-d214e3570a62");
                final InstanceQuery query3 = queryBldr3.getQuery();
                query3.executeWithoutAccessCheck();

                if (query2.next() && query3.next()) {
                    //Admin_User_JAASKey
                    final Insert insert = new Insert(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
                    insert.add("Key", "Administration");
                    insert.add("UserLink", query2.getCurrentValue());
                    insert.add("JAASSystemLink", query3.getCurrentValue());
                    insert.executeWithoutTrigger();
                }
            }

            EFAPS_LOGGER.info("    Check if JAASKEY for Role Admin_User_ModifyUsers must be imported");
            // Admin_User_JAASKey
            queryBldr = new QueryBuilder(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
            queryBldr.addWhereAttrEqValue("Key", "Admin_User_ModifyUsers");
            query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                //Admin_User_RoleGlobal
                final QueryBuilder queryBldr2 = new QueryBuilder(UUID.fromString("e4d6ecbe-f198-4f84-aa69-5a9fd3165112"));
                queryBldr2.addWhereAttrEqValue("UUID", "2819571d-f5c4-4ff8-b7a3-383c195782be");
                final InstanceQuery query2 = queryBldr2.getQuery();
                query2.executeWithoutAccessCheck();
                //Admin_User_JAASSystem
                final QueryBuilder queryBldr3 = new QueryBuilder(UUID.fromString("28e45c59-946d-4502-94b9-58a1bf23ab88"));
                queryBldr3.addWhereAttrEqValue("UUID", "878a1347-a5f3-4a68-a9a4-d214e3570a62");
                final InstanceQuery query3 = queryBldr3.getQuery();
                query3.executeWithoutAccessCheck();

                if (query2.next() && query3.next()) {
                    //Admin_User_JAASKey
                    final Insert insert = new Insert(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
                    insert.add("Key", "Admin_User_ModifyUsers");
                    insert.add("UserLink", query2.getCurrentValue());
                    insert.add("JAASSystemLink", query3.getCurrentValue());
                    insert.executeWithoutTrigger();
                }
            }

             EFAPS_LOGGER.info("    Check if JAASKEY for Role Common_Main_PwdChg must be imported");
            // Admin_User_JAASKey
            queryBldr = new QueryBuilder(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
            queryBldr.addWhereAttrEqValue("Key", "Common_Main_PwdChg");
            query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                //Admin_User_RoleGlobal
                final QueryBuilder queryBldr2 = new QueryBuilder(UUID.fromString("e4d6ecbe-f198-4f84-aa69-5a9fd3165112"));
                queryBldr2.addWhereAttrEqValue("UUID", "2c101471-43e3-4c97-9045-f48f5b12b6ed");
                final InstanceQuery query2 = queryBldr2.getQuery();
                query2.executeWithoutAccessCheck();
                //Admin_User_JAASSystem
                final QueryBuilder queryBldr3 = new QueryBuilder(UUID.fromString("28e45c59-946d-4502-94b9-58a1bf23ab88"));
                queryBldr3.addWhereAttrEqValue("UUID", "878a1347-a5f3-4a68-a9a4-d214e3570a62");
                final InstanceQuery query3 = queryBldr3.getQuery();
                query3.executeWithoutAccessCheck();

                if (query2.next() && query3.next()) {
                    //Admin_User_JAASKey
                    final Insert insert = new Insert(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
                    insert.add("Key", "Common_Main_PwdChg");
                    insert.add("UserLink", query2.getCurrentValue());
                    insert.add("JAASSystemLink", query3.getCurrentValue());
                    insert.executeWithoutTrigger();
                }
            }
             EFAPS_LOGGER.info("    Check if JAASKEY for Role Admin_User_ViewUsers must be imported");
            // Admin_User_JAASKey
            queryBldr = new QueryBuilder(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
            queryBldr.addWhereAttrEqValue("Key", "Admin_User_ViewUsers");
            query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                //Admin_User_RoleGlobal
                final QueryBuilder queryBldr2 = new QueryBuilder(UUID.fromString("e4d6ecbe-f198-4f84-aa69-5a9fd3165112"));
                queryBldr2.addWhereAttrEqValue("UUID", "140ed35c-d07b-4856-8fee-99b297dfb686");
                final InstanceQuery query2 = queryBldr2.getQuery();
                query2.executeWithoutAccessCheck();
                //Admin_User_JAASSystem
                final QueryBuilder queryBldr3 = new QueryBuilder(UUID.fromString("28e45c59-946d-4502-94b9-58a1bf23ab88"));
                queryBldr3.addWhereAttrEqValue("UUID", "878a1347-a5f3-4a68-a9a4-d214e3570a62");
                final InstanceQuery query3 = queryBldr3.getQuery();
                query3.executeWithoutAccessCheck();

                if (query2.next() && query3.next()) {
                    //Admin_User_JAASKey
                    final Insert insert = new Insert(UUID.fromString("0e7650c6-8ec3-4c63-b377-f3eb5fb85f16"));
                    insert.add("Key", "Admin_User_ViewUsers");
                    insert.add("UserLink", query2.getCurrentValue());
                    insert.add("JAASSystemLink", query3.getCurrentValue());
                    insert.executeWithoutTrigger();
                }
            }

            EFAPS_LOGGER.info("    Check if Person 'QuartzTrigger' must be imported");
            // Admin_User_Person
            queryBldr = new QueryBuilder(UUID.fromString("fe9d94fd-2ed8-4c44-b1f0-00e150555888"));
            queryBldr.addWhereAttrEqValue("Name", "QuartzTrigger");
            query = queryBldr.getQuery();
            query.executeWithoutAccessCheck();
            if (!query.next()) {
                //Admin_User_Person
                final Insert insert = new Insert(UUID.fromString("fe9d94fd-2ed8-4c44-b1f0-00e150555888"));
                insert.add("Name", "QuartzTrigger");
                insert.add("UUID", "df2f02a7-c556-49ad-b019-e13db66e1cbf");
                insert.add("FirstName", "The");
                insert.add("LastName", "QuartzTrigger");
                insert.add("TimeZone", "UTC");
                insert.add("Status", "true");
                insert.add("Locale", "en");
                insert.add("Language", "1");
                insert.executeWithoutTrigger();
            }
            Person.initialize();
            ]]>
        </script>
    </version>
</install>
